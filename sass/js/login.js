(function ($) {

    $(document).ready(function () { 
        // Cencel Booking If .tfhb-meeting-cencel-form form submit using ajax
		
        let preloader = `<svg  xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100" preserveAspectRatio="xMidYMid" style="shape-rendering: auto; display: block; background: transparent;" width="20" height="20" xmlns:xlink="http://www.w3.org/1999/xlink"><g><circle stroke-dasharray="164.93361431346415 56.97787143782138" r="35" stroke-width="9" stroke="#ffffff" fill="none" cy="50" cx="50">
                        <animateTransform keyTimes="0;1" values="0 50 50;360 50 50" dur="1s" repeatCount="indefinite" type="rotate" attributeName="transform"></animateTransform>
                    </circle><g></g></g><!-- [ldio] generated by https://loading.io --></svg>`;

         /**
         * show password 
         * @author Sydur
         */
         $(document).on('click', '.tfhb-show-password', function (e) {
            let show_icon = `<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-eye-off"><path d="M10.733 5.076a10.744 10.744 0 0 1 11.205 6.575 1 1 0 0 1 0 .696 10.747 10.747 0 0 1-1.444 2.49"/><path d="M14.084 14.158a3 3 0 0 1-4.242-4.242"/><path d="M17.479 17.499a10.75 10.75 0 0 1-15.417-5.151 1 1 0 0 1 0-.696 10.75 10.75 0 0 1 4.446-5.143"/><path d="m2 2 20 20"/></svg>`;
            $this = $(this);
            let old_icon = `<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-eye"><path d="M2.062 12.348a1 1 0 0 1 0-.696 10.75 10.75 0 0 1 19.876 0 1 1 0 0 1 0 .696 10.75 10.75 0 0 1-19.876 0"/><circle cx="12" cy="12" r="3"/></svg>`;
            let $input = $this.closest('.tfhb-frontend-from__field-item__inner').find('input');

            if ($input.attr('type') === 'password') {
                $input.attr('type', 'text');
                $this.html(show_icon);
            } else {
                $input.attr('type', 'password');
                $this.html(old_icon);
            }
        });

        $(document).on('submit', '#tfhb-login-from', function (e) {  
            e.preventDefault();  
            
            $this = $(this);
            var data  = new FormData(this); 
            var old_icon = $this.find('.tfhb-submit-icon').html();
            // remove html 
            $this.find('.tfhb-submit-icon svg').remove();
            $this.find('.tfhb-submit-icon').append(preloader);
            

            // Remove all error dom and class 
            $this.find('.tfhb-error').removeClass('tfhb-error');
            $this.find('.tfhb-error-text').remove();
            $this.find('.tfhb-notice').remove();
            
            data.append('action', 'tfhb_sign_in');   
            $.ajax({
                url: tfhb_app_booking.ajax_url, 
                type: 'POST',
                data: data,
                processData: false,
                contentType: false,
                success: function (response) {
                    if(response.success){  

                        $this.find('.tfhb-submit-icon svg').remove();
                        $this.find('.tfhb-submit-icon').append(old_icon);
                        // redirect to dashboard 
                        window.location.href = response.redirect_url;

                    }else{  
                        let fieldErrors = response.fieldErrors;

                        $this.find('.tfhb-submit-icon svg').remove();
                        $this.find('.tfhb-submit-icon').append(old_icon);
                        // make a loop 
                        for (let key in fieldErrors) {
                            let error = fieldErrors[key];
                            let error_message = '<small class="tfhb-error-text">' + error + '</small>';
                            $this.find(`[name="${key}"]`).addClass('tfhb-error');
                            $this.find(`[name="${key}"]`).after(error_message);
                        }
                        if(response.message){
                            $this.append(`<div class="tfhb-notice tfhb-error">${response.message}</div>`);
                        }
                    }
                },
                error: function (error) {
                    console.log(error);
                }
            });
        });

       


        // Forgot Passowrd 
        $(document).on('submit', '#tfhb-forgot-password-from', function (e) {  
            e.preventDefault();  
            
            $this = $(this);
            var data  = new FormData(this); 
            var old_icon = $this.find('.tfhb-submit-icon').html();
            // remove html 
            $this.find('.tfhb-submit-icon svg').remove();
            $this.find('.tfhb-submit-icon').append(preloader);


            // Remove all error dom and class 
            $this.find('.tfhb-error').removeClass('tfhb-error');
            $this.find('.tfhb-error-text').remove();
            $this.find('.tfhb-notice').remove();
            
            data.append('action', 'tfhb_forgot_password');   
            $.ajax({
                url: tfhb_app_booking.ajax_url, 
                type: 'POST',
                data: data,
                processData: false,
                contentType: false,
                success: function (response) {
                    if(response.success){  
                        $this.find('.tfhb-submit-icon svg').remove();
                        $this.find('.tfhb-submit-icon').append(old_icon);
                        // display message
                        $this.append(`<div class="tfhb-notice tfhb-success">${response.message}</div>`);



                    }else{  
                        let fieldErrors = response.fieldErrors;
                        
                        $this.find('.tfhb-submit-icon svg').remove();
                        $this.find('.tfhb-submit-icon').append(old_icon);
                        // make a loop 
                        for (let key in fieldErrors) {
                            let error = fieldErrors[key];
                            let error_message = '<small class="tfhb-error-text">' + error + '</small>';
                            $this.find(`[name="${key}"]`).addClass('tfhb-error');
                            $this.find(`[name="${key}"]`).after(error_message);
                        }
                        if(response.message){
                            $this.append(`<div class="tfhb-notice tfhb-error">${response.message}</div>`);
                        }
                    }
                },
                error: function (error) {
                    console.log(error);
                }
            });
        });

        // Reset Passowrd
        $(document).on('submit', '#tfhb-reset-password-from', function (e) {  
            e.preventDefault();  
            
            $this = $(this);
            var data  = new FormData(this);
            var old_icon = $this.find('.tfhb-submit-icon').html();
            // remove html 
            $this.find('.tfhb-submit-icon svg').remove();
            $this.find('.tfhb-submit-icon').append(preloader);

            // Remove all error dom and class
            $this.find('.tfhb-error').removeClass('tfhb-error');
            $this.find('.tfhb-error-text').remove();
            $this.find('.tfhb-notice').remove();
            
            data.append('action', 'tfhb_reset_password');   
            $.ajax({
                url: tfhb_app_booking.ajax_url, 
                type: 'POST',
                data: data,
                processData: false,
                contentType: false,
                success: function (response) {
                    if(response.success){ 
                        $this.find('.tfhb-submit-icon svg').remove();
                        $this.find('.tfhb-submit-icon').append(old_icon);
                        // display message
                        $this.append(`<div class="tfhb-notice tfhb-success">${response.message}</div>`);
                        
                    }else{
                        let fieldErrors = response.fieldErrors;
                        $this.find('.tfhb-submit-icon svg').remove();
                        $this.find('.tfhb-submit-icon').append(old_icon);
                        // make a loop 
                        for (let key in fieldErrors) {
                            let error = fieldErrors[key];
                            let error_message = '<small class="tfhb-error-text">' + error + '</small>';
                            $this.find(`[name="${key}"]`).addClass('tfhb-error');
                            $this.find(`[name="${key}"]`).after(error_message);
                        }
                        if(response.message){
                            $this.append(`<div class="tfhb-notice tfhb-error">${response.message}</div>`);
                        }
                    }

                        
                }}
            );
        });
	}) 

})(jQuery);

 